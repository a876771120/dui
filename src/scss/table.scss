@import "mixins/mixins";
@import "./mixins/config.scss";
@import "common/var";
@include b(firebrick){
  color: firebrick;
}
@include b(deeppink){
  color: deeppink;
}
@include b(blueviolet){
  color: blueviolet;
}
@include b(table) {
  table{
    border-collapse: collapse;
    border-spacing: 0;
  }
  position: relative;
  overflow: hidden;
  box-sizing: border-box;
  flex: 1;
  width: 100%;
  max-width: 100%;
  background-color: $--color-white;
  font-size: 14px;
  color: $--table-font-color;
  @include e(box){
    position: relative;
    overflow: hidden;
    box-sizing: border-box;
    flex: 1;
    width: 100%;
    max-width: 100%;
    font-size: 14px;
  }
  // 数据为空
  @include e(empty-block) {
    min-height: 60px;
    text-align: center;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
  }

  @include e(empty-text) {
    // min-height doesn't work in IE10 and IE11 https://github.com/philipwalton/flexbugs#3-min-height-on-a-flex-container-wont-apply-to-its-flex-items
    // set empty text line height up to contrainer min-height as workaround.
    line-height: 60px;
    width: 50%;
    color: $--color-text-secondary;
  }

  // 展开行

  @include e(expand-icon) {
    position: relative;
    cursor: pointer;
    color: #666;
    font-size: 12px;
    transition: transform 0.2s ease-in-out;
    height: 20px;

    @include m(expanded) {
      transform: rotate(90deg);
    }

    > .#{$namespace}-icon {
      position: absolute;
      left: 50%;
      top: 50%;
      margin-left: -5px;
      margin-top: -5px;
    }
  }

  @include e(expanded-cell) {
    background-color: $--color-white;

    // 纯属为了增加权重
    &[class*=cell] {
      padding: 20px 50px;
    }

    &:hover {
      background-color: transparent !important;
    }
  }

  @include e(placeholder) {
    display: inline-block;
    width: 20px;
  }

  @include e(append-wrapper) {
    overflow: hidden;
  }

  thead {
    color: $--table-header-font-color;
    font-weight: 500;

    &.is-group {
      th {
        background: $--background-color-base;
      }
    }
  }

  th, td {
    padding: 10px 0;
    min-width: 0;
    box-sizing: border-box;
    text-overflow: ellipsis;
    vertical-align: middle;
    position: relative;
    text-align: left;

    @include when(center) {
      text-align: center;
    }

    &.#{$namespace}-table__cell-checkbox{
      text-align: center;
    }

    @include when(right) {
      text-align: right;
    }
    &.is-hidden {
      visibility: hidden;
    }
  }

  tr {
    background-color: $--color-white;

    input[type="checkbox"] {
      margin: 0;
    }
  }

  th.is-leaf, td {
    border-bottom: $--table-border;
  }

  th.is-sortable {
    cursor: pointer;
  }

  th {
    white-space: nowrap;
    overflow: hidden;
    user-select: none;
    background-color: $--table-header-background-color;

    > .cell {
      position: relative;
      word-wrap: normal;
      height: 27px;
      line-height: 27px;
      text-overflow: ellipsis;
      white-space: nowrap;
      display: inline-block;
      vertical-align: middle;
      box-sizing: border-box;
    }
  }

  td {
    div {
      box-sizing: border-box;
    }
  }

  .cell {
    box-sizing: border-box;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: normal;
    line-height: 23px;
    height: 23px;
    padding-left: 10px;
    padding-right: 10px;
    .#{$namespace}-button--mini{
      padding:4px 10px;
    }
  }

  // 拥有多级表头
  @include m((group, border)) {
    border: $--table-border;

    @include share-rule(border-pseudo) {
      content: '';
      position: absolute;
      background-color: $--table-border-color;
      z-index: 1;
    }

    // 表格右部伪 border
    &::after {
      @include extend-rule(border-pseudo);
      top: 0;
      right: 0;
      width: 1px;
      height: 100%;
    }
  }

  // 表格底部伪 border，总是有的
  &::before {
    @include extend-rule(border-pseudo);
    left: 0;
    bottom: 0;
    width: 100%;
    height: 1px;
  }

  // table--border
  @include m(border) {
    border-right: none;
    border-bottom: none;

    &.#{$namespace}-loading-parent--relative {
      border-color: transparent;
    }

    th, td {
      border-right: $--table-border;

      &:first-child .cell {
        padding-left: 10px;
      }
    }

    th.gutter:last-of-type {
      border-bottom: $--table-border;
      border-bottom-width: 1px;
    }

    & th {
      border-bottom: $--table-border;
    }
  }

  @include m(hidden) {
    visibility: hidden;
  }

  @include e(fixed) {
    position: absolute;
    top: 0;
    left: 0;
    overflow-x: hidden;
    overflow-y: hidden;
    box-shadow: $--table-fixed-box-shadow;

    &::before {
      content: '';
      position: absolute;
      left: 0;
      bottom: 0;
      width: 100%;
      height: 1px;
      background-color: $--border-color-lighter;
      z-index: 4;
    }
  }

  @include e(fixed-right-patch) {
    position: absolute;
    top: -1px;
    right: 0;
    background-color: $--color-white;
    border-bottom: $--table-border;
  }

  @include e(fixed-right) {
    top: 0;
    left: auto;
    right: 0;

    .#{$namespace}-table__fixed-header-wrapper,
    .#{$namespace}-table__fixed-body-wrapper,
    .#{$namespace}-table__fixed-footer-wrapper {
      left: auto;
      right: 0;
    }
  }

  @include e(fixed-header-wrapper) {
    position: absolute;
    left: 0;
    top: 0;
    z-index: 3;
  }

  @include e(fixed-footer-wrapper) {
    position: absolute;
    left: 0;
    bottom: 0;
    z-index: 3;

    & tbody td {
      border-top: $--table-border;
      background-color: $--table-row-hover-background-color;
      color: $--table-font-color;
    }
  }

  @include e(fixed-body-wrapper) {
    position: absolute;
    left: 0;
    top: 37px;
    overflow: hidden;
    z-index: 3;
  }

  @include e((header-wrapper, body-wrapper)) {
    width: 100%;
  }

  @include e((header, body, footer)) {
    table-layout: fixed;
    border-collapse: separate;
  }

  @include e((header-wrapper)) {
    overflow: hidden;

    & tbody td {
      background-color: $--table-row-hover-background-color;
      color: $--table-font-color;
    }
  }

  @include e(body-wrapper) {
    overflow: auto;
    position: relative;

    @include when(scrolling-none) {
      ~ .#{$namespace}-table__fixed-left,
      ~ .#{$namespace}-table__fixed-right {
        box-shadow: none;
      }
    }

    @include when(scrolling-left) {
      ~ .#{$namespace}-table__fixed-left {
        box-shadow: none;
      }
    }

    @include when(scrolling-right) {
      ~ .#{$namespace}-table__fixed-right {
        box-shadow: none;
      }
    }

    .#{$namespace}-table--border {
      @include when(scrolling-right) {
        ~ .#{$namespace}-table__fixed-right {
          border-left: $--table-border;
        }
      }

      @include when(scrolling-left) {
        ~ .#{$namespace}-table__fixed-left {
          border-right: $--table-border;
        }
      }
    }
  }

  .caret-wrapper {
    display: inline-block;
    width: 20px;
    height: 20px;
    margin-left: 3px;
    cursor: pointer!important;
    vertical-align: middle;
    position: relative;
  }

  .sort-caret {
    display: inline-block;
    width: 0;
    height: 0;
    border-style: dashed;
    border-color: transparent;
    position: absolute;
    left: 5px;
    border-width: 5px;

    &.ascending {
      top: 3px;
      border-top: none;
      border-bottom-style: solid;
      border-bottom-color: #c0c4cc;
    }

    &.descending {
      bottom: 5px;
      border-bottom: none;
      border-top-style: solid;
      border-top-color: #c0c4cc;
    }
  }

  .ascending .sort-caret.ascending {
    border-bottom-color: $--color-primary;
  }

  .descending .sort-caret.descending {
    border-top-color: $--color-primary;
  }

  @include e(body) {
    tr.hover-row {
      &, &.#{$namespace}-table__row--striped {
        &, &.current-row {
          > td {
            background-color: $--table-row-hover-background-color;
          }
        }
      }
    }

    tr.current-row > td {
      background-color: $--table-current-row-background-color;
    }
  }

  @include e(column-filter-trigger) {
    display: inline-block;
    line-height: 34px;
    cursor: pointer;

    & i {
      color: $--color-info;
      font-size: 12px;
      transform: scale(.75);
    }
  }

  @include e(page){
    position: relative;
    box-sizing: border-box;
    width: 100%;
    padding: 4px 7px 0;
    border-top: 1px solid #ebeef5;
    height: 40px;
  }
  
  [class*=#{$namespace}-table__row--level] {
    .#{$namespace}-table__expand-icon {
      display: inline-block;
      width: 20px;
      line-height: 20px;
      height: 20px;
      text-align: center;
      margin-right: 3px;
    }
  }

  // 高级查询
  @include e(condition){
    height: 40px;
    line-height: 40px;
    box-sizing: border-box;
    border-top: $--table-border;
    @include e(condition-label){
      position: relative;
      display: inline-block;
      padding: 0 15px;
      color: #606266;
      cursor: pointer;
      &::before{
        content: "";
        width: 1px;
        position: absolute;
        height: 24px;
        right: 0;
        top: 8px;
        background: $--table-border-color;
      }
    }
  }
  @include e(filterForm-toolbar){
    padding-bottom: 10px;
    position: relative;
    &:after{
      content: '';
      clear: both;
      display: block;
    }
    &:before{
      content: "";
      height: 1px;
      width: 100%;
      background: $--border-color-lighter;
      position: absolute;
      bottom: 0;
    }
    & .#{$namespace}-checkbox{
      padding: 5px 20px 5px 10px;
      height: 32px;
    }
  }
  @include e(filterFrom-toolbar-op){
    text-align: right;
    &>.#{$namespace}-checkbox{
      display: inline-block;
      margin-right: 10px;
    }
  }
  @include e(filterForm-body){
    padding-top: 10px;
  }
  @include e(filter-item){
    line-height: 28px;
    padding-left: 15px;
    position: relative;
    &::before{
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      width: 0;
      height: 100%;
      border-left: 1px dotted #c0c4cc;
    }
    &:last-child::before{
      height: 14px;
    }
    &::after{
      content: '';
      position: absolute;
      top: 14px;
      left: 0;
      width: 15px;
      height: 0;
      border-top: 1px dotted #c0c4cc;
    }
    & .dui-switch{
      em{
        color: $--color-white;
      }
    }
    @include e(filter-item-content){
      &>div{
        display: inline-block;
      }
      &>div+div{
        margin-left: 8px;
      }
      & label[filter-event]{
        cursor: pointer;
        &:hover{
          text-decoration: underline;
        }
      }
      &:hover{
        &>.#{$namespace}-table__filter-item-delete{
          display: inline-block !important;
        }
      }
      @include e(filter-item-delete){
        color: red;
        display: none !important;
      }
    }
    @include e(popver){
      margin: 5px 0;
      background-color: #fff;
      border: 1px solid #ebeef5;
      border-radius: 4px;
      box-shadow: 0 2px 12px 0 rgba(0,0,0,.1);
    }

  }
  // 高级查询结束

}


//table_page

